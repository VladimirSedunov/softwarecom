
1. Сценарий: Открыть несуществующую страницу

Модуль(файл): test_simple_open_page.py

Тесты:

def test_Открыть_Несуществующую_Страницу()
Шаги:
1. Попытка открыть страницу: "https://softwarecom.ru/about/err-err-err"
2. Открывается страница с сообщением 'Страница_не_найдена' 
3. Скриншот
4. Открыть главную страницу: "https://softwarecom.ru/"
5. Проверить наличие на главной странице текста 'Софт Компани — цифровой системный интегратор.'
6. Скриншот

=======================================================================================

2. Сценарий: Открыть главную страницу, пройти по пунктам главного меню,
             поочерёдно открывать все страницы подменю "Компания", избранные страницы
             подменю "Решения", "Отрасли", меню "Портфолио", "Пресс-центр", "Контакты".
             Пролистать блоки внизу страницы в разделе 'Клиенты и партнёры', скриншот.

Модуль(файл): test_show_main_menu_and_all_submenu.py

Тесты:

def test_show_main_menu_and_all_submenu()
Шаги:
1. Открыть главную страницу: "https://softwarecom.ru"
2. Пройти по пунктам главного меню (простое наведение мышки на пункты главного меню: 
   "Компания", "Решения", "Отрасли", "Портфолио", "Пресс-центр", "Контакты" позволяет
   увидеть пункты подменю.
3. Кликаньем мыши на пунктах меню поочерёдно открыть страницы
   - "Компания" : "Компания", "Отзывы", "Лицензии", "Карьера", "Политика конфиденциальности"
   - "Решения" : "Разработка ПО" / "Разработка ПО и автоматизация процессов" ,
                 "Продукты и коробочные решения" / "Управление технологическими процессами (УТП)"
   - "Отрасли" : "Государственный сектор", "Транспорт и логистика"
   - "Портфолио"
   - "Пресс-центр"
   - "Контакты"


4. Перейти на главную страницу и пролистать блоки в разделе 'Клиенты и партнёры' внизу страницы.
5. Показать изменения отображаемого содержания в этих блоках при наведении мыши.
6. Скриншот

=======================================================================================

3. Сценарий: Фильтрация клиентов в портфолио. Перебор всех допустимых фильтров посредством
             задания значений в двух логически связанных выпадающих списках :
             "Отрасль" и "Услуга"

Модуль(файл): test_clients.py

Тесты:

def test_Фильтрация_Клиентов_В_Портфолио()
Шаги:
1. Открыть страницу Портфолио ("Главная/Клиенты"): "https://softwarecom.ru/clients/"
2. В выпадающем списке "Отрасль" поочерёдно перебрать все доступные пункты, для каждого из них
   также перебрать в выпадающем списке "Услуга" все доступные пункты.
3. Для каждой комбинации "Отрасль" + "Услуга" показать отображаемые блоки с логотипами клиентов
4. Скриншот

=======================================================================================

4. Сценарий: Отправка сообщения из меню "Обратная Связь" / "Задать вопрос"

Модуль(файл): test_feedback_vopros.py

Тесты:

def test_positive()
Шаги:
1. Открыть страницу "Контакты" : "https://softwarecom.ru/contacts/"
2. Открыть диалоговое окно "Обратная Связь" / "Задать вопрос"
3. Выбрать пункт "Задать вопрос", откроется диалоговое окно "Обратная связь"
4. Задать обязательные значения полей "Ф.И.О.", "E-mail", "Телефон", "Сообщение".
5. Поставить (убрать) галку в чекбоксе "Согласен на обработку персональных данных..."
6. Нажать на кнопку "Отправить"
7. Проверить наличие ответа сервиса об успешной отправке (или об ошибке)


def test_blank_fio():
Шаги: аналогичны test_positive()
      отличие в задаваемых реквизитах: не заполнено поле с ФИО

def test_blank_email():
Шаги: аналогичны test_positive()
      отличие в задаваемых реквизитах: не заполнено поле с email

def test_blank_phone():
Шаги: аналогичны test_positive()
      отличие в задаваемых реквизитах: не заполнено поле с phone

def test_blank_text():
Шаги: аналогичны test_positive()
      отличие в задаваемых реквизитах: не заполнено поле с сообщением

=======================================================================================

5. Сценарий: Отправка сообщения из меню "Обратная Связь" / "Задать вопрос".
             Реализовано с использованием параметризации теста

Модуль(файл): test_feedback_vopros_parametrize.py

Тесты:

def test_parametrize(title, fio, email, phone, text, pers_data_agree, is_error, result_message):
Шаги:
1. Открыть страницу "Контакты" : "https://softwarecom.ru/contacts/"
2. Открыть диалоговое окно "Обратная Связь" / "Задать вопрос"
3. Выбрать пункт "Задать вопрос", откроется диалоговое окно "Обратная связь"
4. Задать обязательные значения полей "Ф.И.О.", "E-mail", "Телефон", "Сообщение"
   (в соответствии с переданными в тест параметрами)
5. Поставить (убрать) галку в чекбоксе "Согласен на обработку персональных данных..."
   (в соответствии с переданными в тест параметрами)
6. Нажать на кнопку "Отправить"
7. Проверить наличие ответа сервиса об успешной отправке (или об ошибке)

=======================================================================================

6. Сценарий: Отправка заявки с главной страницы.
             Реализовано с использованием шаблона проектирования Page Object
             и параметризации (параметры задаются как список кортежей)

Модуль(файл): test_claim_PO.py

Тесты:

def test_claim_form(claim):
Шаги:
1. Открыть страницу "Компания / О нас" : "https://softwarecom.ru/about/"
2. Нажать на кнопку "Отправить заявку" - откроется диалоговое окно "Сделать запрос"
3. Задать обязательные значения полей "Ф.И.О.", "E-mail", "Телефон", "Сообщение"
   (в соответствии с переданными в тест параметрами)
4. Поставить (убрать) галку в чекбоксе "Согласен на обработку персональных данных..."
   (в соответствии с переданными в тест параметрами)
5. Нажать на кнопку "Отправить"
6. Проверить наличие ответа сервиса об успешной отправке (или об ошибке)

=======================================================================================

